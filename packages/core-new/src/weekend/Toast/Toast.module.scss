@use '../styles/variables' as *;
@use '../styles/classes.module' as components;

@function cln($name) {
  @return components.$Toast + '-' + $name;
}

$Content: cln('content');

.#{components.$Toast} {
  position: fixed;
  z-index: 9999;
  cursor: default;

  &_horizontal {
    &_center {
      left: 50%;
      transform: translateX(-50%);
    }

    &_left {
      left: 0;
    }

    &_right {
      right: 0;
    }
  }

  &_vertical {
    &_top {
      top: 15rem;
    }

    &_bottom {
      bottom: 0;
    }

    &_center {
      top: 50%;
      transform: translateY(-50%);
    }
  }

  &_horizontal_center.#{components.$Toast}_vertical_center {
    transform: translateY(-50%) translateX(-50%);
  }

  // animation
  &-appear,
  &-enter {
    opacity: 0;
    transition: all 200ms;

    .#{$Content} {
      transform: scale(0);
      transform-origin: center;
      transition: all 200ms;
    }
  }
  &-appear.#{components.$Toast}-appear-active,
  &-enter.#{components.$Toast}-enter-active {
    opacity: 1;

    .#{$Content} {
      transform: scale(1);
      transform-origin: top;
    }
  }
  &-leave {
    opacity: 1;
    transition: all 200ms;

    .#{$Content} {
      transform: scale(1);
      transform-origin: center;
      transition: all 200ms;
    }
  }
  &-leave.#{components.$Toast}-leave-active {
    opacity: 0;

    .#{$Content} {
      transform: scale(0);
      transform-origin: top;
    }
  }
}

.#{$Content} {
  font-size: 14px;
  background: #1b2024;
  background-image: linear-gradient(
    0deg,
    transparent 0%,
    transparent 31%,
    rgba(255, 255, 255, 0.05) 100%
  );
  box-shadow: inset 0 1px 5px 0 rgba(255, 255, 255, 0.19), inset 0px -2px 5px 0 rgba(6, 6, 6, 0.31),
    0 1px 3.4px 0.6px rgba(0, 0, 0, 0.46);
  white-space: pre-wrap;
  word-wrap: break-word;
  padding: min(0.6rem, 6px) min(14px, 1.4rem);
  min-width: 160px;
  text-align: center;

  &_color_default {
    color: white;
  }

  &_color_orange {
    color: $colorOrange;
  }
}

:export {
  Content: $Content;
}
